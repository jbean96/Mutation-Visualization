{"version":3,"sources":["assets/fields.js","MutantTable.js","MutantCode.js","SwitchesGroup.js","MutantKillers.js","MutantSummary.js","MutantDisplay.js","assets/jsonFormat.js","Info.js","UploadFile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CRP","short_name","full_name","CDL","AOD","AOR","ASR","BOD","BOR","COR","EXS","LOD","LOI","LCR","ROR","BCR","SMD","FHD","EXD","OIL","RIL","ZIL","SSID","SEID","STID","SVD","MutantTable","props","mutants","length","tableRows","map","mutant","index","mutant_name","react_default","a","createElement","className","onClick","mutantClickHandler","mutation_operator","mutation_operators","killed","String","equivalent","productive","style","maxWidth","dist_default","columns","title","field","data","MutantCode","code","lines","startLineNo","default_highlight","showLineNumbers","language","docco","wrapLines","startingLineNumber","lineProps","lineNum","includes","_this","this","mutantLines","mutated_lineno","id","makeCodePanel","unmutated_output","x","mutated_output_lineno","mutated_output","unmutated_output_lineno","React","Component","SwitchesGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","checked","newMutant","JSON","parse","stringify","updateSwitchHandler","state","onChangeArg","value","label","FormControlLabel_default","control","Switch_default","onChange","equivalentSwitch","createSwitch","productiveSwitch","FormControl_default","component","FormLabel_default","FormGroup_default","MutantKillers","killers","killer","i","key","MutantSummary","pieRadius","pieMargin","colors","live","summaryObj","filter","m","y","node","total","d3","concat","html","toFixed","_this2","svg","append","attr","g","pie","d","arc","innerRadius","outerRadius","arcHover","summaryInfo","extractSummaryInfo","selectAll","entries","enter","on","nodes","select","transition","duration","drawToolTip","pageX","pageY","hideToolTip","drawPieChart","prevProps","remove","hasOwnProperty","items","table","forEach","el","children","push","createTableRows","MutantDisplay","currentMutant","row","updateMutantHandler","mutant_obj","KeyboardBackspace_default","returnToTable","bind","src_MutantCode","src_SwitchesGroup","src_MutantKillers","react_download_default","file","content","src_MutantSummary","src_MutantTable","format","informationText","usage","Info","MutantSchema","type","properties","mutated_ast_node","required","UploadFile","handleUpload","assertThisInitialized","handleFileRead","setFileInput","fileReader","FileReader","onloadend","ref","fileInput","result","err","logError","Array","isArray","validate","require","element","errors","j","setMutantsHandler","clearError","ev","preventDefault","files","readAsText","onSubmit","src_Info","ErrorMessage","Clear_default","message","App","error","tabIndex","toString","newMutants","esm","selectedIndex","onSelect","src_UploadFile","src_MutantDisplay","createErrorMessage","renderBody","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83ea2990.chunk.js","sourcesContent":["const mutation_operators = {\r\n    CRP : {\r\n        short_name : 'CRP',\r\n        full_name: 'Constant Replacement',\r\n    },\r\n    CDL : {\r\n        short_name : 'CDL',\r\n        full_name: 'Constant Deletion',\r\n    },\r\n    AOD : {\r\n        short_name : 'AOD',\r\n        full_name: 'Arithmetic Operator Deletion',\r\n    },\r\n    AOR : {\r\n        short_name : 'AOR',\r\n        full_name: 'Arithmetic Operator Replacement',\r\n    },\r\n    ASR : {\r\n        short_name : 'ASR',\r\n        full_name: 'Assignment Operator Replacement',\r\n    },\r\n    BOD : {\r\n        short_name : 'BOD',\r\n        full_name: 'Bitwise Operator Deletion',\r\n    },\r\n    BOR : {\r\n        short_name : 'BOR',\r\n        full_name: 'Bitwise Operator Replacement',\r\n    },\r\n    COR : {\r\n        short_name: 'COR',\r\n        full_name: 'Comparison Operator Replacement'\r\n    },\r\n    EXS : {\r\n        short_name : 'EXS',\r\n        full_name: 'Except Handler'\r\n    },\r\n    LOD : {\r\n        short_name : 'LOD',\r\n        full_name: 'Logical Operator Deletion',\r\n    },\r\n    LOI : {\r\n        short_name : 'LOI',\r\n        full_name: 'Logical Operator Insertion',\r\n    },\r\n    LCR : {\r\n        short_name : 'LCR',\r\n        full_name: 'Logical Connector Replacement',\r\n    },\r\n    ROR : {\r\n        short_name : 'ROR',\r\n        full_name: 'Relational Operator Replacement',\r\n    },\r\n    BCR : {\r\n        short_name : 'BCR',\r\n        full_name: ' Break Continue Replacement',\r\n    },\r\n    SMD : {\r\n        short_name : 'SMD',\r\n        full_name: 'Statement Deletion',\r\n    },\r\n    FHD : {\r\n        short_name : 'FHD',\r\n        full_name: 'Finally Handler Deletion',\r\n    },\r\n    EXD : {\r\n        short_name : 'EXD',\r\n        full_name: 'Exception Disabling',\r\n    },\r\n    OIL : {\r\n        short_name : 'OIL',\r\n        full_name: 'One Iteration Loop',\r\n    },\r\n    RIL : {\r\n        short_name : 'RIL',\r\n        full_name: 'Reverse Iteration Loop',\r\n    },\r\n    ZIL : {\r\n        short_name : 'ZIL',\r\n        full_name: 'Zero Iteration Loop',\r\n    },\r\n    SSID : {\r\n        short_name : 'SSID',\r\n        full_name: 'Slice Start Index Deletion',\r\n    },\r\n    SEID : {\r\n        short_name : 'SEID',\r\n        full_name: 'Slice End Index Deletion',\r\n    },\r\n    STID : {\r\n        short_name : 'STID',\r\n        full_name: 'Slice Step Index Deletion',\r\n    },\r\n    SVD : {\r\n        short_name : 'SVD',\r\n        full_name: 'Self Variable Deletion',\r\n    }\r\n};\r\n\r\nmodule.exports = mutation_operators;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/MutantDisplay.css';\r\nimport mutation_operators from './assets/fields.js';\r\nimport MaterialTable from 'material-table';\r\n\r\n/* Functional component to display high level data about all of the mutants */\r\nfunction MutantTable(props) {\r\n    if (props.mutants.length === 0) return null;\r\n\r\n    const tableRows = props.mutants.map((mutant, index) => {\r\n\r\n        return {\r\n            mutant_name: <span className=\"mutantName\" onClick={() => props.mutantClickHandler(index)}>{mutant.mutant_name}</span>,\r\n            mutation_operator: mutation_operators[mutant.mutation_operator].full_name,\r\n            killed: String(mutant.killed),\r\n            equivalent: String(mutant.equivalent),\r\n            productive: String(mutant.productive)\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div style={{ maxWidth: '100%' }} className=\"topLevel\">\r\n            <MaterialTable\r\n                columns={[\r\n                    { title: 'Mutant Name', field: 'mutant_name' },\r\n                    { title: 'Mutation Operator', field: 'mutation_operator' },\r\n                    { title: 'Killed', field: 'killed' },\r\n                    { title: 'Equivalent', field: 'equivalent' },\r\n                    { title: 'Productive', field: 'productive' }\r\n                ]}\r\n                data={tableRows}\r\n                title='Mutants Found'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MutantTable;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/MutantDisplay.css';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n/* Functional component that displays details about an individual mutant */\r\nclass MutantCode extends React.Component {\r\n    makeCodePanel(code, lines, startLineNo) {\r\n        return (\r\n            <SyntaxHighlighter showLineNumbers\r\n                language='python'\r\n                style={docco}\r\n                wrapLines='true'\r\n                startingLineNumber={startLineNo}\r\n                lineProps={(lineNum) => {\r\n                    if (lines.includes(lineNum)) {\r\n                        return { className: \"mutation\" };\r\n                    }\r\n                }}>{code}</SyntaxHighlighter>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const mutantLines = [this.props.mutant.mutated_lineno];\r\n        return (\r\n            <div style={{ maxWidth: '100%' }} className=\"topLevel\">\r\n                <script>hljs.initHighlightingOnLoad();</script>\r\n                <div id=\"container\">\r\n                    <div className=\"panel\" id=\"panel1\">\r\n                        <h3>Original Code</h3>\r\n                        {this.makeCodePanel(this.props.mutant.unmutated_output,\r\n                            mutantLines.map(x => x - this.props.mutant.mutated_output_lineno + 1),\r\n                            this.props.mutant.mutated_output_lineno)}\r\n                    </div>\r\n                    <div className=\"panel\" id=\"panel2\">\r\n                        <h3>Mutant Code</h3>\r\n                        {this.makeCodePanel(this.props.mutant.mutated_output,\r\n                            mutantLines.map(x => x - this.props.mutant.unmutated_output_lineno + 1),\r\n                            this.props.mutant.unmutated_output_lineno)}\r\n                    </div>\r\n                    <div id=\"clear\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MutantCode;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/MutantDisplay.css';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nclass SwitchesGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productive: this.props.mutant.productive,\r\n      equivalent: this.props.mutant.equivalent,\r\n    };\r\n  }\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n    let newMutant = JSON.parse(JSON.stringify(this.props.mutant));\r\n    newMutant[name] = event.target.checked;\r\n    this.props.updateSwitchHandler(newMutant);\r\n\r\n  };\r\n\r\n  createSwitch(checked, onChangeArg, value, label) {\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={this.handleChange(onChangeArg)}\r\n            value={value}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const equivalentSwitch = (!this.props.mutant.killed) ? this.createSwitch(this.state.equivalent,\r\n      \"equivalent\",\r\n      \"equivalent\",\r\n      \"Equivalent\") : null;\r\n    const productiveSwitch = this.createSwitch(this.state.productive,\r\n      \"productive\",\r\n      \"productive\",\r\n      \"Productive\");\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">This mutant is:</FormLabel>\r\n        <FormGroup>\r\n          {equivalentSwitch}\r\n          {productiveSwitch}\r\n        </FormGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SwitchesGroup;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/MutantDisplay.css';\r\n\r\nfunction MutantKillers(props) {\r\n    if (props.killers.length === 0) return null;\r\n\r\n    const tableRows = props.killers.map(function (killer, i) {\r\n        return (\r\n            <li key={i}>\r\n                <strong>{killer[0]}</strong>\r\n                <ul>\r\n                    <li>{killer[1]}</li>\r\n                </ul>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"topLevel\">\r\n            <h4>This mutant was killed by the following tests:</h4>\r\n            <ul>\r\n                {tableRows}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MutantKillers;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/MutantSummary.css';\r\nimport * as d3 from 'd3';\r\n\r\nclass MutantSummary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        if (!this.props.mutants) {\r\n            throw \"\\\"mutants\\\" not passed as a prop\";\r\n        }\r\n    }\r\n\r\n    pieRadius = 50;\r\n    pieMargin = 10;\r\n    colors = {\r\n        \"killed\" : \"green\",\r\n        \"live\" : \"red\",\r\n        \"equivalent\" : \"yellow\"\r\n    };\r\n\r\n    extractSummaryInfo() {\r\n        var summaryObj = {};\r\n        summaryObj.killed = this.props.mutants.filter(m => m.killed && !m.equivalent).length;\r\n        summaryObj.equivalent = this.props.mutants.filter(m => m.equivalent).length;\r\n        summaryObj.live = this.props.mutants.filter(m => !m.killed && !m.equivalent).length;\r\n        summaryObj.productive = this.props.mutants.filter(m => m.productive).length;\r\n        return summaryObj;\r\n    }\r\n\r\n    drawToolTip(x, y, node, total) {\r\n        d3.select(\"#tooltip\")\r\n            .style(\"left\", `${x}px`)\r\n            .style(\"top\", `${y}px`)\r\n            .style(\"background-color\", this.colors[node.data[0]])\r\n            .html(`${node.data[0]}<br/>${(node.data[1] * 100.0 / total).toFixed(1)}%`)\r\n            .style(\"display\", \"inline\");\r\n    }\r\n\r\n    hideToolTip() {\r\n        d3.select(\"#tooltip\")\r\n            .style(\"display\", \"none\");\r\n    }\r\n\r\n    drawPieChart() {\r\n        const svg = d3.select(\"div#pieChart\").append(\"svg\")\r\n                        .attr(\"width\", this.pieRadius * 2 + this.pieMargin)\r\n                        .attr(\"height\", this.pieRadius * 2 + this.pieMargin);\r\n\r\n        d3.select(\"div#pieChart\").append(\"div\")\r\n            .attr(\"id\", \"tooltip\");\r\n\r\n        const g = svg.append(\"g\")\r\n                    .attr(\"transform\", `translate(${this.pieRadius + this.pieMargin / 2}, ${this.pieRadius + this.pieMargin / 2})`);\r\n\r\n        const pie = d3.pie().value(d => d[1]);\r\n        const arc = d3.arc().innerRadius(0).outerRadius(this.pieRadius);\r\n        const arcHover = d3.arc().innerRadius(0).outerRadius(this.pieRadius + this.pieMargin / 2);\r\n\r\n        let summaryInfo = this.extractSummaryInfo();\r\n        let total = this.props.mutants.length;\r\n        delete summaryInfo.productive;\r\n\r\n        const arcs = g.selectAll(\"arc\").data(pie(Object.entries(summaryInfo)))\r\n                        .enter().append(\"g\")\r\n                        .attr(\"class\", \"arc\")\r\n                        .on(\"mouseover\", (d, i, nodes) => {\r\n                            d3.select(nodes[i]).select(\"path\").transition().duration(200).attr(\"d\", arcHover);\r\n                        }).on(\"mousemove\", (d, i, nodes) => {\r\n                            this.drawToolTip(d3.event.pageX, d3.event.pageY, d, total);\r\n                        }).on(\"mouseout\", (d, i, nodes) => {\r\n                            d3.select(nodes[i]).select(\"path\").transition().duration(200).attr(\"d\", arc);\r\n                            this.hideToolTip();\r\n                        });\r\n\r\n        arcs.append(\"path\")\r\n            .attr(\"fill\", (d) => this.colors[d.data[0]])\r\n            .attr(\"d\", arc);\r\n    }\r\n\r\n    // Draws the pie chart after this component has been added to\r\n    // the DOM\r\n    componentDidMount() {\r\n        this.drawPieChart();\r\n    }\r\n\r\n    // Updates the pie chart after some of the mutants have been modified\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.mutants !== prevProps.mutants) {\r\n            d3.select(\"div#pieChart\").select(\"svg\").remove();\r\n            this.drawPieChart();\r\n        }\r\n    }\r\n\r\n    createTableRows(summaryInfo) {\r\n        if (!summaryInfo.hasOwnProperty(\"killed\") || \r\n            !summaryInfo.hasOwnProperty(\"equivalent\") ||\r\n            !summaryInfo.hasOwnProperty(\"live\")) {\r\n                throw \"Missing attributes from summaryInfo\";\r\n            }\r\n        let items = Object.entries(summaryInfo);\r\n        \r\n        let total = this.props.mutants.length;\r\n\r\n        let table = [];\r\n        items.forEach((el) => {\r\n            let children = [];\r\n            children.push(<td><span id={el[0]}>{el[0]} mutants</span></td>);\r\n            children.push(<td>{el[1]}</td>);\r\n            children.push(<td>{`${((el[1] * 100.0) / total).toFixed(1)}%`}</td>);\r\n            \r\n            table.push(<tr>{children}</tr>);\r\n        });\r\n\r\n        return table;\r\n    }\r\n\r\n    render() {\r\n        let summaryInfo = this.extractSummaryInfo();\r\n\r\n        // TODO: Better way to format the summary numbers? \r\n        return (\r\n            <div className=\"topLevel\">\r\n                <div className=\"sumPanel\" id=\"sumPanel1\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>count</th>\r\n                                <th>percent</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.createTableRows(summaryInfo)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"sumPanel\" id=\"pieChart\">\r\n                </div>\r\n                <div id=\"clear\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MutantSummary;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/MutantDisplay.css';\r\nimport KeyboardBackspace from '@material-ui/icons/KeyboardBackspace';\r\nimport MutantTable from './MutantTable';\r\nimport MutantCode from './MutantCode';\r\nimport SwitchesGroup from './SwitchesGroup';\r\nimport MutantKillers from './MutantKillers';\r\nimport MutantSummary from './MutantSummary';\r\nimport Download from '@axetroy/react-download';\r\n\r\n/* Component that handles the displaying of mutants and the logic to navigate\r\n * around the mutant interface\r\n */\r\nclass MutantDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMutant: null\r\n        };\r\n    }\r\n\r\n    returnToTable() {\r\n        this.setState({ currentMutant: null });\r\n    }\r\n\r\n    mutantClickHandler(row) {\r\n        this.setState({ currentMutant: row });\r\n    }\r\n\r\n    updateMutantHandler(mutant) {\r\n        this.props.updateMutantHandler(this.state.currentMutant, mutant);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.currentMutant !== null) {\r\n            const mutant_obj = this.props.mutants[this.state.currentMutant];\r\n            return (\r\n                <div className=\"topLevel\">\r\n                    <KeyboardBackspace className=\"back-button\" onClick={this.returnToTable.bind(this)}/>\r\n                    <br />\r\n                    <h3>{mutant_obj.mutant_name}</h3>\r\n                    <MutantCode mutant={mutant_obj} />\r\n                    <SwitchesGroup mutant={mutant_obj}\r\n                        updateSwitchHandler={this.updateMutantHandler.bind(this)} />\r\n                    <MutantKillers killers={mutant_obj.killers} />\r\n                </div>\r\n            );\r\n        } else if (this.props.mutants.length > 0) {\r\n            return (\r\n                <div className=\"topLevel\">\r\n                    <div id=\"save-file\">\r\n                        <button>\r\n                            <Download file=\"mutation_data.json\"\r\n                                content={JSON.stringify(this.props.mutants)}>\r\n                                Save Mutation Data\r\n                            </Download>\r\n                        </button>\r\n                    </div>\r\n                    <div id=\"summary\">\r\n                        <MutantSummary mutants={this.props.mutants} />\r\n                    </div>\r\n                    <MutantTable mutants={this.props.mutants}\r\n                        mutantClickHandler={this.mutantClickHandler.bind(this)} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nexport default MutantDisplay;","const format = `[\r\n    {\r\n        \"mutated_lineno\": <int>,            // The line number of the original code that was mutated\r\n        \"mutated_output\": <string>,         // Mutant code snippet\r\n        \"productive\": <boolean>,            // Indicates whether or not it was productive\r\n        \"mutation_operator\": <string>,      // The applied mutation operator\r\n        \"equivalent\": <boolean>,            // Indicates whether or not the mutant is equivalent\r\n        \"mutated_output_lineno\": <int>,     // The starting line number for the mutated code snippet\r\n        \"unmutated_output\": <string>,       // Original code snipped\r\n        \"killers\": [                        // Array of the tests that killed the mutant\r\n            [\r\n                <string>,                   // Name of failed test\r\n                <string>                    // Error message/traceback\r\n            ],\r\n            ...\r\n        ],\r\n        \"unmutated_output_lineno\": <int>,   // Starting line number for the original code snippet\r\n        \"mutant_name\": <string>,            // Unique name for the mutant\r\n        \"killed\": <boolean>,                // Indicates whether or not the mutant was killed\r\n        \"mutated_ast_node\": <string>        // Name of the mutated AST Node\r\n    },\r\n    ...\r\n]`;\r\n\r\nexport default format;","import React from 'react';\r\nimport './styles/App.css';\r\nimport './styles/Info.css';\r\nimport format from './assets/jsonFormat.js';\r\n\r\nconst informationText = \"Welcome to the Mutation-Visualization tool. This project \" +\r\n    \"was created by students in CSE P 590 at the University of Washington in Spring 2019 \" +\r\n    \"for their class project.\";\r\n\r\nconst usage = \"Start by uploading a .json file in the prescribed format below. The tool \" +\r\n    \"will display a table consisting of all the mutants described in the input file and \" +\r\n    \"allow you to inspect the mutation and mark them as \\\"equivalent\\\" and/or \\\"productive\\\". \" +\r\n    \"The main page will also display overall facts about the mutants including how many \" +\r\n    \"have been killed, are live and are equivalent. At any time you can download the file with \" +\r\n    \"your changes by clicking the \\\"Save Mutation Data\\\" button.\";\r\n\r\nfunction Info() {\r\n    return (\r\n        <div>\r\n            <div id=\"text\">\r\n                <p>{informationText}</p>\r\n                <h2>Usage</h2>\r\n                <p>{usage}</p>\r\n            </div>\r\n            <h2>Data Format</h2>\r\n            <div id=\"code\">\r\n                <pre><code>\r\n                    {format}\r\n                </code></pre>\r\n            </div><br/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport './styles/App.css';\r\nimport Info from './Info.js';\r\nimport './styles/UploadFile.css'\r\n\r\nconst MutantSchema = {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"mutant_name\": { \"type\": \"string\" },\r\n        \"killed\": { \"type\": \"boolean\" },\r\n        \"killers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n                \"type\": \"array\",\r\n                \"items\": { \"type\": \"string\" }\r\n            }\r\n        },\r\n        \"equivalent\": { \"type\": \"boolean\" },\r\n        \"productive\": { \"type\": \"boolean\" },\r\n        \"mutated_lineno\": { \"type\": \"integer\" },\r\n        \"mutated_output\": { \"type\": \"string\" },\r\n        \"mutated_output_lineno\": { \"type\": \"integer\" },\r\n        \"unmutated_output\": { \"type\": \"string\" },\r\n        \"unmutated_output_lineno\": { \"type\": \"integer\" },\r\n        \"mutation_operator\": { \"type\": \"string\" },\r\n        \"mutated_ast_node\": { \"type\": \"string\" },\r\n    },\r\n    \"required\": [\"mutant_name\", \"killed\", \"killers\",\r\n        \"equivalent\", \"productive\", \"mutated_lineno\",\r\n        \"mutated_output\", \"mutated_output_lineno\",\r\n        \"unmutated_output\", \"unmutated_output_lineno\",\r\n        \"mutation_operator\", \"mutated_ast_node\"]\r\n};\r\n\r\nclass UploadFile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUpload = this.handleUpload.bind(this);\r\n        this.handleFileRead = this.handleFileRead.bind(this);\r\n        this.setFileInput = this.setFileInput.bind(this);\r\n        this.fileReader = new FileReader();\r\n        this.fileReader.onloadend = this.handleFileRead;\r\n    }\r\n\r\n    setFileInput(ref) {\r\n        this.fileInput = ref;\r\n    }\r\n\r\n    handleFileRead() {\r\n        var content;\r\n        try {\r\n            content = JSON.parse(this.fileReader.result);\r\n        } catch (err) {\r\n            this.props.logError(err);\r\n            return;\r\n        }\r\n\r\n        if (!Array.isArray(content)) {\r\n            this.props.logError('Top level json object must be an array');\r\n        } else if (content.length === 0) {\r\n            this.props.logError('Uploaded array is empty');\r\n        } else {\r\n            // Validate each element against a json schema\r\n            var validate = require('jsonschema').validate;\r\n            for (var i = 0; i < content.length; i++) {\r\n                const element = content[i];\r\n                // validate each element against the mutant schema\r\n                const validated = validate(element, MutantSchema);\r\n                if (validated.errors.length > 0) {\r\n                    this.props.logError(`mutant ${i} does not follow JSON format`);\r\n                    return;\r\n                }\r\n\r\n                // Verify that every mutant that's killed is associated with a non-empty array of killers\r\n                if (element.killed && (element.killers.length == 0)) {\r\n                    this.props.logError(`mutant ${i} marked as killed but has no killers`);\r\n                    return;\r\n                } else if (!element.killed && (element.killers.length > 0)) {\r\n                    this.props.logError(`mutant ${i} marked as unkilled but has killers`);\r\n                    return;\r\n                }\r\n\r\n                // Verify that any mutant that has been killed is not marked as equivalent\r\n                if (element.killed && element.equivalent) {\r\n                    this.props.logError(`mutant ${i} marked as killed so cannot be equivalent`);\r\n                    return;\r\n                }\r\n\r\n                // Verify that every killer is an array of length 2\r\n                for (var j = 0; j < element.killers.length; j++) {\r\n                    const killer = element.killers[j]\r\n                    if (!killer || killer.length !== 2) {\r\n                        this.props.logError(`mutant ${i} killers array improperly formatted`);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            this.props.setMutantsHandler(content);\r\n            this.props.clearError();\r\n        }\r\n    }\r\n\r\n    handleUpload(ev) {\r\n        ev.preventDefault();\r\n\r\n        if (this.fileInput.files.length > 0) {\r\n            this.fileReader.readAsText(this.fileInput.files[0]);\r\n        } else {\r\n            this.props.logError('No files selected');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"file-upload\">\r\n                <div id=\"file-upload-form\">\r\n                    <form onSubmit={this.handleUpload}>\r\n                        <input ref={(ref) => { this.setFileInput(ref); }} type='file' />\r\n                        <button>Upload</button>\r\n                    </form>\r\n                </div>\r\n                <Info />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadFile;","import React from 'react';\r\nimport './styles/App.css';\r\nimport MutantDisplay from './MutantDisplay.js';\r\nimport UploadFile from './UploadFile.js';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nfunction ErrorMessage(props) {\r\n  return (\r\n    <div id=\"error\"><Clear onClick={props.clearError} /> {props.message}</div>\r\n  );\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mutants: [],\r\n      error: null,\r\n      tabIndex: 0,\r\n    };\r\n  }\r\n\r\n  logError(err) {\r\n    this.setState({ error: err });\r\n  }\r\n\r\n  clearError() {\r\n    this.setState({ error: null });\r\n  }\r\n\r\n  createErrorMessage() {\r\n    if (this.state.error) {\r\n      return (\r\n        <div>\r\n          <ErrorMessage message={this.state.error.toString()}\r\n            clearError={this.clearError.bind(this)} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  setMutantsHandler(mutants) {\r\n    const newMutants = JSON.parse(JSON.stringify(mutants));\r\n    this.setState({ mutants: newMutants });\r\n    this.setState({ tabIndex: 1 })\r\n  }\r\n\r\n  updateMutantHandler(index, mutant) {\r\n    let newMutants = JSON.parse(JSON.stringify(this.state.mutants));\r\n    newMutants[index] = mutant;\r\n    this.setState({ mutants: newMutants });\r\n  }\r\n\r\n  renderBody() {\r\n    return (\r\n      <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\r\n        <TabList>\r\n          <Tab>Upload Mutation Data</Tab>\r\n          {\r\n            (this.state.mutants.length) ? (<Tab>Explore Mutation Data</Tab>) : null\r\n          }\r\n        </TabList>\r\n\r\n        <TabPanel>\r\n          <UploadFile setMutantsHandler={this.setMutantsHandler.bind(this)}\r\n            logError={this.logError.bind(this)}\r\n            clearError={this.clearError.bind(this)} />\r\n        </TabPanel>\r\n        {\r\n          (this.state.mutants.length) ?\r\n            (<TabPanel>\r\n              <MutantDisplay mutants={this.state.mutants} updateMutantHandler={this.updateMutantHandler.bind(this)} />\r\n            </TabPanel>) : null\r\n        }\r\n      </Tabs>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <div id=\"site-header\">\r\n          <h1>Mutation Testing Visualization Tool</h1>\r\n        </div>\r\n        {this.createErrorMessage()}\r\n        {this.renderBody()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}